---
version: 2.1

docker_auth: &docker_auth
  username: $DOCKERHUB_USERNAME
  password: $DOCKERHUB_PASSWORD

defaults: &defaults
  environment:
    GOOGLE_PROJECT_ID: planet-4-151612
    TEST_OUTPUT_DIR: /tmp/planet4-docker
    BUILD_FLAGS: -r
  docker:
    - image: greenpeaceinternational/circleci-base:latest
      auth:
        <<: *docker_auth
  working_directory: /home/circleci/app

jobs:
  image-clean:
    <<: *defaults
    steps:
      - checkout
      - run: activate-gcloud-account.sh
      - run: bin/generate_repos.sh
      - run: cat bin/repo_list.txt | xargs -L 1 --max-procs=200 ./bin/gc_single.sh
      - run: cat command_list.txt | xargs -I CMD --max-procs=200 bash -c CMD

  build:
    <<: *defaults
    steps:
      - checkout
      - run: make lint
      - run: activate-gcloud-account.sh
      - run: mkdir -p /tmp/workspace/var
      - run: make build
      - run: rsync -av . /tmp/workspace/src
      - run: echo "${CIRCLE_BUILD_NUM}" > /tmp/workspace/var/circle-build-num
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - var
            - src

  test-ubuntu:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker:
          docker_layer_caching: true
      - run: activate-gcloud-account.sh
      - run:
          name: Run bats unit tests
          command: |
            cd /tmp/workspace/src
            BUILD_TAG="build-$(cat /tmp/workspace/var/circle-build-num)" \
            TEST_FOLDERS=tests/src/planet-4-151612/ubuntu \
            ./tests/test.sh
      - store_test_results:
          path: /tmp/planet4-docker/merged
      - store_artifacts:
          path: /tmp/artifacts

  test-php-fpm:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Authenticate with gcloud
          command: |
            activate-gcloud-account.sh
      - run:
          name: Run bats unit tests
          command: |
            cd /tmp/workspace/src
            BUILD_TAG="build-$(cat /tmp/workspace/var/circle-build-num)" \
            TEST_FOLDERS=tests/src/planet-4-151612/php-fpm \
            ./tests/test.sh
      - store_test_results:
          path: /tmp/planet4-docker/merged
      - store_artifacts:
          path: /tmp/artifacts

  test-openresty:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Authenticate with gcloud
          command: |
            activate-gcloud-account.sh
      - run:
          name: Run bats unit tests
          command: |
            cd /tmp/workspace/src
            BUILD_TAG="build-$(cat /tmp/workspace/var/circle-build-num)" \
            TEST_FOLDERS=tests/src/planet-4-151612/openresty \
            ./tests/test.sh
      - store_test_results:
          path: /tmp/planet4-docker/merged
      - store_artifacts:
          path: /tmp/artifacts

  test-wordpress:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Authenticate with gcloud
          command: |
            activate-gcloud-account.sh
      - run:
          name: Run bats unit tests
          command: |
            cd /tmp/workspace/src
            BUILD_TAG="build-$(cat /tmp/workspace/var/circle-build-num)" \
            TEST_FOLDERS=tests/src/planet-4-151612/wordpress \
            ./tests/test.sh
      - store_test_results:
          path: /tmp/planet4-docker/merged
      - store_artifacts:
          path: /tmp/artifacts

  test-handbook:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Authenticate with gcloud
          command: |
            activate-gcloud-account.sh
      - run:
          name: Run bats unit tests
          command: |
            cd /tmp/workspace/src
            BUILD_TAG="build-$(cat /tmp/workspace/var/circle-build-num)" \
            TEST_FOLDERS=tests/src/planet-4-151612/handbook \
            ./tests/test.sh
      - store_test_results:
          path: /tmp/planet4-docker/merged
      - store_artifacts:
          path: /tmp/artifacts

  test-exim:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Authenticate with gcloud
          command: |
            activate-gcloud-account.sh
      - run:
          name: Run bats unit tests
          command: |
            cd /tmp/workspace/src
            BUILD_TAG="build-$(cat /tmp/workspace/var/circle-build-num)" \
            TEST_FOLDERS=tests/src/planet-4-151612/exim \
            ./tests/test.sh
      - store_test_results:
          path: /tmp/planet4-docker/merged
      - store_artifacts:
          path: /tmp/artifacts

  scan-openresty:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Trivy
          command: |
            mkdir -p /tmp/trivy-results
            trivy --exit-code 0 image \
              "gcr.io/${GOOGLE_PROJECT_ID}/openresty:build-$(cat /tmp/workspace/var/circle-build-num)" \
              > /tmp/trivy-results/report.txt
      - store_artifacts:
          path: /tmp/trivy-results

  scan-php-fpm:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Trivy
          command: |
            mkdir -p /tmp/trivy-results
            trivy --exit-code 0 image \
              "gcr.io/${GOOGLE_PROJECT_ID}/php-fpm:build-$(cat /tmp/workspace/var/circle-build-num)" \
              > /tmp/trivy-results/report.txt
      - store_artifacts:
          path: /tmp/trivy-results

  scan-wordpress:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Trivy
          command: |
            mkdir -p /tmp/trivy-results
            trivy --exit-code 0 image \
              "gcr.io/${GOOGLE_PROJECT_ID}/wordpress:build-$(cat /tmp/workspace/var/circle-build-num)" \
              > /tmp/trivy-results/report.txt
      - store_artifacts:
          path: /tmp/trivy-results

  scan-handbook:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Trivy
          command: |
            mkdir -p /tmp/trivy-results
            trivy --exit-code 0 image \
              "gcr.io/${GOOGLE_PROJECT_ID}/handbook:build-$(cat /tmp/workspace/var/circle-build-num)" \
              > /tmp/trivy-results/report.txt
      - store_artifacts:
          path: /tmp/trivy-results

  scan-exim:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Trivy
          command: |
            mkdir -p /tmp/trivy-results
            trivy --exit-code 0 image \
              "gcr.io/${GOOGLE_PROJECT_ID}/exim:build-$(cat /tmp/workspace/var/circle-build-num)" \
              > /tmp/trivy-results/report.txt
      - store_artifacts:
          path: /tmp/trivy-results

  deploy:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: activate-gcloud-account.sh
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Deploy tagged release
          command: |
            export CIRCLE_BUILD_NUM=$(cat /tmp/workspace/var/circle-build-num)
            cd /tmp/workspace/src
            make deploy

  promote:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - run:
          name: prepare git
          command: |
            git config user.email "${GIT_USER_EMAIL}"
            git config user.name "CircleCI Bot"
            git config merge.ours.driver true
      - run:
          name: tag
          command: |
            current_version=$(git-current-tag.sh)
            new_version=$(increment-version.sh $current_version)
            echo "Tagging to ${new_version}"
            git tag -a "$new_version" -m "$new_version"
            git push origin --tags
      - run:
          name: commit updated build numbers
          command: |
            update-build-numbers.sh

workflow-references:
  branch_jobs: &branch_jobs
    jobs:
      - build:
          context: org-global
      - test-openresty:
          context: org-global
          requires:
            - build
      - test-php-fpm:
          context: org-global
          requires:
            - build
      - test-wordpress:
          context: org-global
          requires:
            - build
      - test-handbook:
          context: org-global
          requires:
            - build
      - test-exim:
          context: org-global
          requires:
            - build
      - scan-openresty:
          context: org-global
          requires:
            - build
      - scan-php-fpm:
          context: org-global
          requires:
            - build
      - scan-wordpress:
          context: org-global
          requires:
            - build
      - scan-handbook:
          context: org-global
          requires:
            - build
      - scan-exim:
          context: org-global
          requires:
            - build
      - promote:
          context: org-global
          requires:
            - test-openresty
            - test-php-fpm
            - test-wordpress
            - test-handbook
            - test-exim
            - scan-openresty
            - scan-php-fpm
            - scan-wordpress
            - scan-handbook
            - scan-exim
          filters:
            branches:
              only: main

  tag_jobs: &tag_jobs
    jobs:
      - build:
          context: org-global
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - test-openresty:
          context: org-global
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - test-php-fpm:
          context: org-global
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - test-wordpress:
          context: org-global
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - test-exim:
          context: org-global
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - test-handbook:
          context: org-global
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - scan-openresty:
          context: org-global
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v.*/
      - scan-php-fpm:
          context: org-global
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v.*/
      - scan-wordpress:
          context: org-global
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v.*/
      - scan-exim:
          context: org-global
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v.*/
      - scan-handbook:
          context: org-global
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v.*/
      - deploy:
          context: org-global
          requires:
            - test-openresty
            - test-php-fpm
            - test-wordpress
            - test-exim
            - test-handbook
            - scan-openresty
            - scan-php-fpm
            - scan-wordpress
            - scan-exim
            - scan-handbook
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/

workflows:
  weekly-build:
    <<: *branch_jobs
    triggers:
      - schedule:
          # Weekly 2100UTC Sunday night
          cron: "0 21 * * 0"
          filters:
            branches:
              only:
                - main

  branch:
    <<: *branch_jobs

  tag:
    <<: *tag_jobs
