#!/bin/bash
set -e

_good "$(printf "%-10s " "openresty:")" "APP_ENV ${APP_ENV}"
_good "$(printf "%-10s " "openresty:")" "server_name ${APP_HOSTNAME}"
_good "$(printf "%-10s " "openresty:")" "client_max_body_size=${UPLOAD_MAX_SIZE}"

mkdir -p /etc/nginx/sites-enabled

nginx_configure_ssl.sh

nginx_configure_fastcgi_backend.sh

nginx_configure_hostpath.sh

nginx_configure_real_ip.sh

nginx_configure_geoip2.sh

nginx_configure_cloudflare.sh

nginx_configure_health_checks.sh

# Set worker_processes = num cpu cores
WORKER_PROCESSES=$(grep -c processor /proc/cpuinfo)
if [[ $WORKER_PROCESSES -gt ${OPENRESTY_MAX_WORKER_PROCESSES} ]]; then
  # number of available processor cores exceeds the maximum permitted, limit to maximum
  _good "$(printf "%-10s " "openresty:")" "Using max ${OPENRESTY_MAX_WORKER_PROCESSES} of $WORKER_PROCESSES available cores"
  WORKER_PROCESSES=${OPENRESTY_MAX_WORKER_PROCESSES}
fi
_good "$(printf "%-10s " "openresty:")" "worker_processes=$WORKER_PROCESSES"
export WORKER_PROCESSES

_title "Starting service: nginx v${OPENRESTY_VERSION}"

dockerize \
  -template /app/templates/etc/nginx/sites-enabled/default.conf.tmpl:/etc/nginx/sites-enabled/default.conf \
  -template /app/templates/etc/nginx/sites-enabled/default-ssl.conf.tmpl:/etc/nginx/sites-enabled/default-ssl.conf \
  -template /app/templates/etc/nginx/nginx.conf.tmpl:/etc/nginx/nginx.conf

exec nginx
